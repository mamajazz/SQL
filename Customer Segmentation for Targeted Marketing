--Customer Segmentation for Targeted Marketing

--CREATE TABLE customers (
    customer_id VARCHAR(10) PRIMARY KEY,
    name VARCHAR(100),
    signup_date DATE,
    country VARCHAR(50)
);

INSERT INTO customers VALUES 
('C001', 'Jane Doe', '2022-03-15', 'USA'),
('C002', 'John Smith', '2021-12-01', 'Canada'),
('C003', 'Alice Johnson', '2023-01-20', 'UK'),
('C004', 'Carlos Mart√≠nez', '2022-07-11', 'Mexico'),
('C005', 'Emily Davis', '2021-10-05', 'Australia');

--Table: Orders 
CREATE TABLE orders (
    order_id VARCHAR(10) PRIMARY KEY,
    customer_id VARCHAR(10),
    order_date DATE,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

INSERT INTO orders VALUES 
('O001', 'C001', '2023-11-05', 120.50),
('O002', 'C001', '2024-02-10', 89.99),
('O003', 'C002', '2023-09-15', 300.00),
('O004', 'C002', '2024-01-18', 250.75),
('O005', 'C003', '2024-03-01', 79.99),
('O006', 'C004', '2023-06-22', 199.99),
('O007', 'C005', '2023-08-30', 150.25),
('O008', 'C005', '2024-04-01', 210.00),
('O009', 'C005', '2024-04-10', 99.99);

--Calculate The Recency, Frequency, and Monetary (RFM) scores
--Classify customers into marketing segments
WITH rfm_base AS (
    SELECT
        c.customer_id,
        c.name,
        MAX(o.order_date) AS last_order_date,
        COUNT(o.order_id) AS frequency,
        SUM(o.total_amount) AS monetary,
        DATE '2025-04-15' - MAX(o.order_date) AS recency
    FROM customers c
    JOIN orders o ON c.customer_id = o.customer_id
    GROUP BY c.customer_id, c.name
)

SELECT
    customer_id,
    name,
    recency,
    frequency,
    monetary,
    
    -- Score Recency (Lower = Better)
    CASE
        WHEN recency <= 30 THEN 5
        WHEN recency <= 60 THEN 4
        WHEN recency <= 90 THEN 3
        WHEN recency <= 180 THEN 2
        ELSE 1
    END AS r_score,
    
    -- Score Frequency (Higher = Better)
    CASE
        WHEN frequency >= 10 THEN 5
        WHEN frequency >= 7 THEN 4
        WHEN frequency >= 4 THEN 3
        WHEN frequency >= 2 THEN 2
        ELSE 1
    END AS f_score,
    
    -- Score Monetary (Higher = Better)
    CASE
        WHEN monetary >= 1000 THEN 5
        WHEN monetary >= 500 THEN 4
        WHEN monetary >= 250 THEN 3
        WHEN monetary >= 100 THEN 2
        ELSE 1
    END AS m_score

FROM rfm_base;


--Segment Labels
-- Combine scores into a label
SELECT *,
       CONCAT(r_score, f_score, m_score) AS rfm_score,
       CASE
           WHEN r_score >= 4 AND f_score >= 4 AND m_score >= 4 THEN 'Champions'
           WHEN r_score >= 4 AND f_score >= 3 THEN 'Loyal Customers'
           WHEN r_score = 5 THEN 'Recent Buyers'
           WHEN f_score >= 4 THEN 'Frequent Buyers'
           WHEN m_score >= 4 THEN 'Big Spenders'
           ELSE 'Needs Attention'
       END AS segment
FROM (
    -- (Paste previous RFM query here)
) rfm_final;


